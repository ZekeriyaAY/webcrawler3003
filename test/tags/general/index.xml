<rss version="2.0"
    xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>General on Berkay Çubuk</title>
        <link>http://localhost:5500/tags/general/</link>
        <description>Recent content in General on Berkay Çubuk</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 29 Jan 2021 17:50:21 +0000</lastBuildDate>
    
        <atom:link href="http://localhost:5500/tags/general/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
<title>Hugo Theme From Scratch</title>
<link>http://localhost:5500/blog/hugo-theme-from-scratch/</link>
<pubDate>Tue, 14 Dec 2021 11:30:47 +0300</pubDate>
      
      <guid>http://localhost:5500/blog/hugo-theme-from-scratch/</guid>
<description>&lt;p&gt;You can watch my &amp;ldquo;Hugo Theme From Scratch&amp;rdquo; video on YouTube.&lt;/p&gt;
&lt;p&gt;I recorded a video after a long time and I forget to increase the font size :^)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://youtu.be/aSd_Ha5nDkM&#34;&gt;https://youtu.be/aSd_Ha5nDkM&lt;/a&gt;&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Installing Arch on Bios Systems</title>
<link>http://localhost:5500/blog/installing-arch-on-bios-systems/</link>
<pubDate>Wed, 28 Jul 2021 17:31:17 +0300</pubDate>
      
      <guid>http://localhost:5500/blog/installing-arch-on-bios-systems/</guid>
<description>&lt;p&gt;This simple guide will explain how to install Arch Linux on Bios systems. Methods and commands will probably change in time but the concept is not.&lt;/p&gt;
&lt;p&gt;!! Disclaimer: If you&amp;rsquo;re super new to the linux, maybe you should start with &lt;a href=&#34;https://manjaro.org/&#34;&gt;Manjaro&lt;/a&gt;. Because do not apply these instructions to your production machine unless you know what you&amp;rsquo;re doing. Also do not 100% trust what I shared here, always take &lt;a href=&#34;https://wiki.archlinux.org/title/Installation_guide&#34;&gt;Arch Wiki&lt;/a&gt; as a guide.&lt;/p&gt;
&lt;h2 id=&#34;downloading-and-writing-arch-on-a-usb-drive&#34;&gt;Downloading and writing Arch on a usb drive&lt;/h2&gt;
&lt;p&gt;First of all we need to download latest version from &lt;a href=&#34;https://archlinux.org/download/&#34;&gt;archlinux.org&lt;/a&gt;. Arch linux uses rolling releases, that means unlike Debian systems there&amp;rsquo;ll be only one version. New updates and patches will be added to the top of the main release. That&amp;rsquo;s why Arch linux is getting updates more often.&lt;/p&gt;
&lt;p&gt;And then write the image to your usb drive. If you can choose your writing mode, choose dd (a.k.a disk destroyer 😀).&lt;/p&gt;
&lt;h2 id=&#34;running-arch-installation-medium&#34;&gt;Running Arch installation medium&lt;/h2&gt;
&lt;p&gt;Plug your usb drive into the installation device and boot from the usb. You should see a warm welcoming black terminal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;arch_welcome.png&#34; alt=&#34;lsblk result&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re not using english keyboard you should first set your keyboard layout. Find your layout by ls&amp;rsquo;ing deeper &lt;code&gt;/user/share/kbd/keymaps&lt;/code&gt;.
I&amp;rsquo;m using Turkish Q keyboard and I found mine with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# ls /usr/share/kbd/keymaps/i386/qwerty
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To load your keyboard layout:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# loadkeys layout-name
For my keyboard:
# loadkeys trq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Next step, check internet connection. See your enabled network interfaces:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# ip link
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I always prefer using ethernet because I don&amp;rsquo;t really know how to connect wifi (I can&amp;rsquo;t see my wifi adapter in the interfaces list) 😅 To check your internet connection ping your favourite website:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# ping berkaycubuk.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you receive packages you&amp;rsquo;re connected.&lt;/p&gt;
&lt;h3 id=&#34;update-the-system-clock&#34;&gt;Update the system clock&lt;/h3&gt;
&lt;p&gt;Before installing we need to configure our target device. First update system clock:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# timedatectl set-ntp true
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;partition-the-disk&#34;&gt;Partition the disk&lt;/h3&gt;
&lt;p&gt;To check your disks:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# lsblk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Every device has it&amp;rsquo;s own disks and labels, you have to find yours (Probably the big one).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;lsblk_result.jpg&#34; alt=&#34;lsblk result&#34;&gt;&lt;/p&gt;
&lt;p&gt;And start partitioning. I&amp;rsquo;ll use graphical version of fdisk:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;You should type your disk name, mine is sda
# cfdisk /dev/sda
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We&amp;rsquo;re working with BIOS device so we just need to create boot and swap partitions.&lt;/p&gt;
&lt;p&gt;For swap partition I&amp;rsquo;ll set the size 12G because I like to give it the 150% of the ram size and I have 8 GB for this machine. But there are not strict rules, everybody uses their own way. It&amp;rsquo;s should be primary and for type we&amp;rsquo;ll pick Linux swap / Solaris (or just swap).&lt;/p&gt;
&lt;p&gt;The next partition will be the root partition. You can give it the remaining space. It&amp;rsquo;ll be primary as well, but this time type will be Linux.&lt;/p&gt;
&lt;p&gt;After checking everything we can write it.&lt;/p&gt;
&lt;p&gt;!! Important: When you write the changes your disk will be formatted and your personal files will be deleted.&lt;/p&gt;
&lt;p&gt;Now you should see your changes with  &lt;code&gt;lsblk&lt;/code&gt;. Ok, we can format the partitions for our needs.&lt;/p&gt;
&lt;p&gt;To format root partition:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkfs.ext4 /dev/root_partition
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To format swap partition:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mkswap /dev/swap_partition
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;mount-the-file-systems&#34;&gt;Mount the file systems&lt;/h3&gt;
&lt;p&gt;We can mount the partitions we just created.&lt;/p&gt;
&lt;p&gt;Mount the swap with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# swapon /dev/swap_partition
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Mount the root volume with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# mount /dev/root_partition /mnt
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;install-essential-packages&#34;&gt;Install essential packages&lt;/h3&gt;
&lt;p&gt;We managed to survive 😀 now we can install the core packages and a text editor to configure things later.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;If you&amp;#39;re not feeling comfortable with vim you can choose nano
# pacstrap /mnt base linux linux-firmware base-devel vim
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;fstab&#34;&gt;Fstab&lt;/h3&gt;
&lt;p&gt;We have to generate fstabl file to tell the system where are our partitions. To do that run:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can check the result from &lt;code&gt;/mnt/etc/fstab&lt;/code&gt; file.&lt;/p&gt;
&lt;h3 id=&#34;chroot&#34;&gt;Chroot&lt;/h3&gt;
&lt;p&gt;For this time we&amp;rsquo;re running from the usb drive we plugged to the system. Now we have a base install to we can switch to the target machine.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# arch-chroot /mnt
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;time-zone-and-locale&#34;&gt;Time zone and locale&lt;/h3&gt;
&lt;p&gt;We can set our timezone with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# ln -sf /usr/share/zoneinfo/Region/City /etc/localtime
For me:
# ln -sf /usr/share/zoneinfo/Europe/Istanbul /etc/localtime
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Set the hardware clock to UTC:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# hwclock --systohc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Select the system language by uncommenting your_language.UTF-8 from &lt;code&gt;/etc/locale.gen&lt;/code&gt;. After that run&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# locale-gen
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create new file &lt;code&gt;/etc/locale.conf&lt;/code&gt; and set LANG variable:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LANG=en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Also, if you want you can make your keyboard layout permanent by creating new file ``/etc/vconsole.conf` and set KEYMAP variable:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;KEYMAP=trq
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;network&#34;&gt;Network&lt;/h3&gt;
&lt;p&gt;Create a new file to set hostname &lt;code&gt;/etc/hostname&lt;/code&gt; and fill it with the name you want. And create a new file &lt;code&gt;/etc/hosts&lt;/code&gt; and fill it with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;127.0.0.1      localhost
::1            localhost
127.0.1.1      hostname.localdomain      hostname
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;set-root-password&#34;&gt;Set root password&lt;/h3&gt;
&lt;p&gt;Right now we&amp;rsquo;re using the root user and we have to set a password for it to login after the reboot.
Run &lt;code&gt;passwd&lt;/code&gt; to set your password.&lt;/p&gt;
&lt;h3 id=&#34;bootloader-stuff&#34;&gt;Bootloader stuff&lt;/h3&gt;
&lt;p&gt;Now we can install the bootloader and other stuff we want to have when we rebooted the system.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# pacman -S grub networkmanager network-manager-applet dialog wireless_tools wpa_supplicant os-prober mtools dosfstools linux-headers
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Run this to install grub:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# grub-install --target=i386-pc /dev/sda
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Run this to create grub config:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# grub-mkconfig -o /boot/grub/grub.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we have successfully installed bootloader&lt;/p&gt;
&lt;h3 id=&#34;exit-installation&#34;&gt;Exit installation&lt;/h3&gt;
&lt;p&gt;Just type &lt;code&gt;exit&lt;/code&gt; to exit and unmount all with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# umount -a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ok, we can reboot the system now with &lt;code&gt;reboot&lt;/code&gt; command. If you&amp;rsquo;re on your lucky day you should see the login page. Login with the root username and the password you created before.&lt;/p&gt;
&lt;h3 id=&#34;hard-part-is-over-now-configure-and-setup-thing-we-want&#34;&gt;Hard part is over now configure and setup thing we want&lt;/h3&gt;
&lt;p&gt;Right now, we don&amp;rsquo;t have internet connection. I will enable and start the NetworkManager&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# systemctl enable NetworkManager
# systemctl start NetworkManager
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After that, if you have a ethernet cable connected now you can use the internet. If you want to use wifi now you can do that with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# nmtui
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-new-user&#34;&gt;Create new user&lt;/h3&gt;
&lt;p&gt;We can use root for all the time but it&amp;rsquo;s not ideal, so I&amp;rsquo;ll set up new user for the daily use.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# useradd -m -G wheel berkay
And I&amp;#39;ll set password for the user
# passwd berkay
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We added user to wheel group that means the user can use the magical &lt;code&gt;sudo&lt;/code&gt; command. But the sudo command is not enabled.&lt;/p&gt;
&lt;p&gt;Open the &lt;code&gt;/etc/sudoers&lt;/code&gt; file and go all the way down to &lt;code&gt;# %wheel ALL=(ALL) ALL&lt;/code&gt; and uncomment it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;To open sudoers file run
# EDITOR=vim visudo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we can exit and login to our newly created user.&lt;/p&gt;
&lt;h3 id=&#34;video-driver&#34;&gt;Video Driver&lt;/h3&gt;
&lt;p&gt;I don&amp;rsquo;t know do we need it but it doesn&amp;rsquo;t hurt:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;If you are using Intel
# sudo pacman -S xf86-video-intel
If you are using AMD
# sudo pacman -S xf86-video-amdgpu
For the Nvidia
# sudo pacman -S nvidia nvidia-utils
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;display-server&#34;&gt;Display Server&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;ll install Xorg for our display server:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# sudo pacman -S xorg-server xorg-xinit
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;window-manager&#34;&gt;Window Manager&lt;/h3&gt;
&lt;p&gt;I like window managers so why not?&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# sudo pacman -S i3-gaps i3status dmenu rxvt-unicode picom
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;fonts&#34;&gt;Fonts&lt;/h3&gt;
&lt;p&gt;Also we need some fonts to display:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# sudo pacman -S ttf-linux-libertine noto-fonts-emoji
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;xinitrc&#34;&gt;.xinitrc&lt;/h3&gt;
&lt;p&gt;We need create a new file called &lt;code&gt;.xinitrc&lt;/code&gt; to define what to when we run &lt;code&gt;startx&lt;/code&gt; to enter GUI mode.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;picom &amp;amp;
exec i3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you&amp;rsquo;re having issue with the keyboard layout you can also add:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;setxkbmap -layout layout_name &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;run-your-xinit&#34;&gt;Run your xinit&lt;/h3&gt;
&lt;p&gt;We set up everything to start. You&amp;rsquo;ll just need to run &lt;code&gt;startx&lt;/code&gt; to enter your newly configured setup.&lt;/p&gt;
&lt;h2 id=&#34;conlusion&#34;&gt;Conlusion&lt;/h2&gt;
&lt;p&gt;You just installed Arch linux. We only did the base stuff, you can start to configure it to your taste.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>My e-mails are now fully mine</title>
<link>http://localhost:5500/blog/my-emails-are-now-fully-mine/</link>
<pubDate>Tue, 27 Jul 2021 17:07:40 +0300</pubDate>
      
      <guid>http://localhost:5500/blog/my-emails-are-now-fully-mine/</guid>
<description>&lt;p&gt;Recently I managed to run my own mail server. It was a good thing to learn how e-mails work and also good to take back your privacy. Right now I can send and receive e-mails without asking Google, Microsoft or Yahoo.&lt;/p&gt;
&lt;h2 id=&#34;tools-im-using&#34;&gt;Tools I&amp;rsquo;m using&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Thunderbird: Graphical mail client&lt;/li&gt;
&lt;li&gt;K9: Android mail client&lt;/li&gt;
&lt;li&gt;Postfix: to send and receive mail&lt;/li&gt;
&lt;li&gt;Dovecot: to get mail to client (Thunderbird and K9)&lt;/li&gt;
&lt;li&gt;Spamassasin: prevent spam&lt;/li&gt;
&lt;li&gt;OpenDKIM: validate mails to send popular sites&lt;/li&gt;
&lt;li&gt;OpenSSL: free SSL certificate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To setup all these stuff I used &lt;a href=&#34;https://lukesmith.xyz/&#34;&gt;Luke Smith&amp;rsquo;s&lt;/a&gt; &lt;a href=&#34;https://github.com/LukeSmithxyz/emailwiz&#34;&gt;emailwiz&lt;/a&gt; script. It&amp;rsquo;s simple to install, you just have to follow the installation steps.&lt;/p&gt;
&lt;h2 id=&#34;but-why-why-not-use-gmail&#34;&gt;But why? Why not use Gmail?&lt;/h2&gt;
&lt;p&gt;There are a lot of normal people who uses gmail on a daily basis. And I understand them, it just works, why to change it?&lt;/p&gt;
&lt;p&gt;First of all, gmail is storing all your mails in the data center, that you don&amp;rsquo;t know where it is. And you cannot access all the data about you. Also if someday gmail somehow disappears your whole life will be upside down because you connected all your important stuff to your gmail account.&lt;/p&gt;
&lt;p&gt;You can ask, &amp;ldquo;If Google fails, how do you think I&amp;rsquo;m not gonna fail?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s true, managing your server is not an easy job, it can fail anytime. But, you can access all of your data and back it up in seconds. And your mail will be registered under your domain so, in someday if you change your server or provider you&amp;rsquo;ll still continue to use the same mail address you used before.&lt;/p&gt;
&lt;p&gt;What about ProtonMail?&lt;/p&gt;
&lt;p&gt;ProtonMail look&amp;rsquo;s secure than the gmail. But, the issue continues, you&amp;rsquo;re still dependent on a somebody or some company.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>About My New Project Kafemio</title>
<link>http://localhost:5500/blog/about-my-new-project-kafemio/</link>
<pubDate>Thu, 25 Mar 2021 07:24:09 +0300</pubDate>
      
      <guid>http://localhost:5500/blog/about-my-new-project-kafemio/</guid>
<description>&lt;p&gt;I started to code this project just one month ago, and it&amp;rsquo;s going good. But I already have a idea for this project before the covid.&lt;/p&gt;
&lt;h2 id=&#34;what-is-kafemio&#34;&gt;What is Kafemio?&lt;/h2&gt;
&lt;p&gt;Kafemio is cafe management software. Unlike it&amp;rsquo;s competitors, it&amp;rsquo;s open-source, web based and doesn&amp;rsquo;t require special equipment. Main goal is creating something cheap &amp;amp; accessible for small cafes. They can use this software with their laptops, tablets and phones. Device requirements are simple; it&amp;rsquo;s needs to connect internet and it&amp;rsquo;s need to run modern browsers like chrome, firefox etc&amp;hellip;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s talk about money. If users will host the project on their own, the price is free. If they don&amp;rsquo;t want to manage it on theirself, we will manage the software and server for they. And the price will be 20$/month (it&amp;rsquo;s opening price, it can change in time). Another cool thing about this project is, you don&amp;rsquo;t have to pay some money upfront. It&amp;rsquo;s like spotify for cafes, you can leave it whenever you want.&lt;/p&gt;
&lt;p&gt;Ok, now we can talk some technical stuff. There two main packages for the project, server and client. I created the server using &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt; with Typescript. I know Node.js for this kind of realtime application can be bad, I know Go is better for this kind of application. I just wanted to create an MVP, that&amp;rsquo;s why I choose Node.js, but after some releases I can switch to Go for better performance. For database, Kafemio uses &lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt; to store all the data.&lt;/p&gt;
&lt;p&gt;How client works? Client is written in &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; with Typescript. React is cool, popular and not that bad. To speed up the process I choosen &lt;a href=&#34;https://material-ui.com/&#34;&gt;Material UI&lt;/a&gt; for the ui components. For state management I&amp;rsquo;m not using redux (it&amp;rsquo;s complicated and I don&amp;rsquo;t like it.), I kinda liked &lt;a href=&#34;https://zustand.surge.sh/&#34;&gt;zustand&lt;/a&gt; so we&amp;rsquo;re using zustand.&lt;/p&gt;
&lt;p&gt;Most people don&amp;rsquo;t care but I take privacy serious. Right now we&amp;rsquo;re only storing one cookie for the access token. And we&amp;rsquo;re trying to collect only required data about you. It&amp;rsquo;s open-source so, you can use the app comfortably than other enterprise things.&lt;/p&gt;
&lt;p&gt;Documentation is important and when you start from scratch it&amp;rsquo;s easy to documentate stuff. Right now for documentation I&amp;rsquo;m using &lt;a href=&#34;https://vuepress.vuejs.org/&#34;&gt;vuepress&lt;/a&gt;, it&amp;rsquo;s simple and easy to use.&lt;/p&gt;
&lt;p&gt;Supported languages, you know as always English and for my local friends Turkish. But it&amp;rsquo;s focused on English, after developing more I&amp;rsquo;m planning to add more languages.&lt;/p&gt;
&lt;p&gt;You can learn more about Kafemio on &lt;a href=&#34;https://kafemio.com&#34;&gt;kafemio.com&lt;/a&gt;. All the source code will available on &lt;a href=&#34;https://github.com/Kafemio&#34;&gt;GitHub&lt;/a&gt; when I finish the first version.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Introduction to Vim</title>
<link>http://localhost:5500/blog/introduction-to-vim/</link>
<pubDate>Fri, 26 Feb 2021 10:26:14 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/introduction-to-vim/</guid>
<description>&lt;p&gt;Vim is a magical text editor. It&amp;rsquo;s a cross-platform editor so, it&amp;rsquo;s available on most platforms.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can download Vim from its &lt;a href=&#34;https://www.vim.org/download.php&#34;&gt;official website&lt;/a&gt;. Installation progress will not be covered in this article.&lt;/p&gt;
&lt;p&gt;After installing Vim, just open up your terminal and type vim. You should see something like that:
&lt;img src=&#34;vim-welcome-screen.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;i-cant-exit-from-vim&#34;&gt;I can&amp;rsquo;t exit from Vim!&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/5Zesu5VPNGJlm/giphy.gif&#34; alt=&#34;via GIPHY&#34;&gt;&lt;/p&gt;
&lt;p&gt;On your first try with Vim, you&amp;rsquo;ll probably have a hard time exiting from it. But don&amp;rsquo;t worry, I&amp;rsquo;m here to help you. Just type &lt;strong&gt;:q&lt;/strong&gt; . This will close Vim without saving anything. If you tried to write something, you&amp;rsquo;d see an error to suppress it use &lt;strong&gt;:q!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you want to save and exit, you can use &lt;strong&gt;:wq&lt;/strong&gt; That command writes and quit Vim.&lt;/p&gt;
&lt;h2 id=&#34;lets-start&#34;&gt;Let&amp;rsquo;s start&lt;/h2&gt;
&lt;p&gt;Vim has three different modes. Normal, Insert, and Visual mode. In the &lt;strong&gt;normal mode&lt;/strong&gt;, we can move around the editor with keys.&lt;/p&gt;
&lt;p&gt;To move your cursor up, press &lt;strong&gt;k&lt;/strong&gt;,&lt;/p&gt;
&lt;p&gt;go down with &lt;strong&gt;j&lt;/strong&gt;,&lt;/p&gt;
&lt;p&gt;go left with &lt;strong&gt;h&lt;/strong&gt;,&lt;/p&gt;
&lt;p&gt;and go right with &lt;strong&gt;l&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;As I said before, we have three different modes. When you launched Vim, it starts with normal mode. You can go to &lt;strong&gt;insert mode&lt;/strong&gt; with** i**. Now you can insert texts into your document. Insert mode works like your old editors. You can do the same things in this mode. Ok, what if I want to go back to normal mode? Simple, just press &lt;strong&gt;Esc&lt;/strong&gt; and you&amp;rsquo;re in normal mode.&lt;/p&gt;
&lt;h2 id=&#34;walking-char-to-char-is-cool-but-how-can-i-jump&#34;&gt;Walking char to char is cool but how can I jump?&lt;/h2&gt;
&lt;p&gt;If you want to move word to word you have some shortcuts:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;w&lt;/strong&gt; =&amp;gt; jump forwards to the start of a word&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;b&lt;/strong&gt; =&amp;gt; jump backwards to the start of a word&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;gg&lt;/strong&gt; =&amp;gt; go to first line&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;G&lt;/strong&gt; =&amp;gt; go to last line&lt;/p&gt;
&lt;h2 id=&#34;how-to-remember-all-these-shortcuts&#34;&gt;How to remember all these shortcuts?&lt;/h2&gt;
&lt;p&gt;Well, you can&amp;rsquo;t remember all these shortcuts and commands. You have to start using them to make it muscle memory. Also, for the start you don&amp;rsquo;t need all, if you learn some basic commands, you can do the similar things like your IDE.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>I created a VsCode extension to connect with developers!</title>
<link>http://localhost:5500/blog/i-created-a-vscode-extension-to-connect-with-developers/</link>
<pubDate>Thu, 25 Feb 2021 06:08:04 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/i-created-a-vscode-extension-to-connect-with-developers/</guid>
<description>&lt;p&gt;Yesterday, I released my most complicated extension to the VsCode marketplace. The core concept of &lt;strong&gt;Codemate&lt;/strong&gt; is connecting with developers.&lt;/p&gt;
&lt;h2 id=&#34;what-is-used-to-create-codemate&#34;&gt;What is used to create Codemate?&lt;/h2&gt;
&lt;p&gt;In VsCode to create a extension you have to use Javascript so I used Typescript to create the extension. But, to make the development simpler I also used &lt;a href=&#34;https://svelte.dev/&#34;&gt;Svelte &lt;/a&gt;to create user interfaces.&lt;/p&gt;
&lt;p&gt;For the backend, I continued with Javscript so I created it with also Typescript. To store data I used most preferred choice, MongoDB.&lt;/p&gt;
&lt;p&gt;Extension:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Typescript&lt;/li&gt;
&lt;li&gt;Svelte&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Backend / API:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Typescript&lt;/li&gt;
&lt;li&gt;Express.js&lt;/li&gt;
&lt;li&gt;Github OAuth&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-are-the-features&#34;&gt;What are the features?&lt;/h2&gt;
&lt;p&gt;I tried to keep it simple. Right now you can,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;customize your profile (don&amp;rsquo;t forget to pick a programming language)&lt;/li&gt;
&lt;li&gt;connect with other people&lt;/li&gt;
&lt;li&gt;login with Github (it&amp;rsquo;s more secure)&lt;/li&gt;
&lt;li&gt;completely&lt;a href=&#34;https://github.com/berkaycubuk/codemate&#34;&gt; open source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;codemate-video.gif&#34; alt=&#34;&#34;&gt;Codemate Extension
&lt;img src=&#34;codemate-video-2.gif&#34; alt=&#34;&#34;&gt;Login with Github&lt;/p&gt;
&lt;h2 id=&#34;what-are-the-goals&#34;&gt;What are the goals?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Reaching out more people&lt;/li&gt;
&lt;li&gt;Publishing web and mobile app&lt;/li&gt;
&lt;li&gt;Adding more features to make the place more unique&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can download the extension from &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=berkaycubuk.codemate&#34;&gt;VsCode marketplace&lt;/a&gt;, thank you!&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Continue to Express.js</title>
<link>http://localhost:5500/blog/continue-to-express-js/</link>
<pubDate>Tue, 23 Feb 2021 06:44:26 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/continue-to-express-js/</guid>
<description>&lt;p&gt;With Express.js we can use requests and responses. Request is coming to Express and response is going from Express.&lt;/p&gt;
&lt;h2 id=&#34;sending-a-response&#34;&gt;Sending a Response&lt;/h2&gt;
&lt;p&gt;With Express we can easly send responses. With this code we&amp;rsquo;re sending string as a response:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;send&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hi&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we want to send json response:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;({
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hi&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Berkay&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;response-types&#34;&gt;Response Types&lt;/h3&gt;
&lt;p&gt;We can change response types as well:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;html&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// text/html
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// application/json
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;png&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;// image/png
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;response-headers&#34;&gt;Response Headers&lt;/h3&gt;
&lt;p&gt;Changing headers are easy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;token&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;response-cookies&#34;&gt;Response Cookies&lt;/h3&gt;
&lt;p&gt;Sometimes we&amp;rsquo;ll want to add cookies to our responses:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;cookie&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;token&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;supersecrettoken&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also delete cookies&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;clearCookie&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;token&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;response-status&#34;&gt;Response Status&lt;/h3&gt;
&lt;p&gt;We can set our response status:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;status&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;404&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;({
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;message&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Not found&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can do the samething with a shortcut:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sendStatus&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;404&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// =&amp;gt; res.status(404).send(&amp;#39;Not found&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;response-redirect&#34;&gt;Response Redirect&lt;/h3&gt;
&lt;p&gt;With a simple response you can redirect your users:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;redirect&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://localhost:5500&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;redirect&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;redirect&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;back&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// sending users back
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;routing&#34;&gt;Routing&lt;/h2&gt;
&lt;p&gt;Routes are simply directions where we are accepting requests. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/login&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;) =&amp;gt; {})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example, we opened our gates for the &amp;ldquo;/login&amp;rdquo; address, but only for get request.&lt;/p&gt;
&lt;h3 id=&#34;routes-with-parameters&#34;&gt;Routes With Parameters&lt;/h3&gt;
&lt;p&gt;We want to create a blog and we have &amp;ldquo;/post&amp;rdquo; route. Our visitors will be normal people so they are not using any API tools, they will use their browser to access our website. What if they only want to see a single post? We have to get some data with the url, to do that:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/post/:postName&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;) =&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;send&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;params&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;postName&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This example sends user back the parameter.&lt;/p&gt;
&lt;h2 id=&#34;middleware&#34;&gt;Middleware&lt;/h2&gt;
&lt;p&gt;Middlewares are a function that we can connect to routes. We can run it in all requests or we can run it on specific requests. They all can work together, that means you can use multiple middlewares. Let&amp;rsquo;s understand it with an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;express&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;())
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example we used Express&amp;rsquo;s built in json function. It helps us to use json in our responses and requests. It runs in every request. Time to create our own and adding it to specific routes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;myMiddleFunc&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;next&lt;/span&gt;) =&amp;gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// do what you want in here
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;next&lt;/span&gt;() &lt;span style=&#34;color:#75715e&#34;&gt;// sending the ball to the next one
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;myMiddleFunc&lt;/span&gt;, (&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;) =&amp;gt; {})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With this, we created simple  function that does what you want and when it&amp;rsquo;s finish it&amp;rsquo;s job, going to next middleware. To add middlewares to specific routes, we can pass them to route as a parameter.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Express.js, a Node.js web application framework</title>
<link>http://localhost:5500/blog/express-js-getting-started/</link>
<pubDate>Mon, 22 Feb 2021 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/express-js-getting-started/</guid>
<description>&lt;p&gt;Express.js (aka Express) is a Node.js web application framework. With Express you can create web servers. If you want to create a backend with javascript, Express will be your first choice.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;If you want to developer javascript based applications you should &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;install Node.js&lt;/a&gt; on your computer. After installing Node.js you can test it with this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node -v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Node.js comes with NPM(Node Package Manager). Npm helps us to install node packages without pain. To test npm, you can run this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm -v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can start our first express project. Create a new directory for your project. And initialize package.json with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm init -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This command will create a package.json file for you. &lt;code&gt;-y&lt;/code&gt; is helps us to skip questions (package name, description, etc). After all, we can install Express with this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install express

// for yarn (in the future posts I&#39;ll try to explain what is yarn.)

yarn add express
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, you have Express available in your project. Next step is creating the **index.js **file.&lt;/p&gt;
&lt;h2 id=&#34;first-project&#34;&gt;First Project&lt;/h2&gt;
&lt;p&gt;Our first code will be the classical &amp;ldquo;Hello, World!&amp;rdquo; example. Create a new file called &lt;strong&gt;index.js&lt;/strong&gt;. And write this code in it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// index.js
const express = require(&#39;express&#39;)
const app = express()

const PORT = 5000

app.get(&#39;/&#39;, (req, res) =&amp;gt; {
    res.send(&amp;quot;Hello, World!&amp;quot;)
})

app.listen(PORT, () =&amp;gt; console.log(&#39;Our first server is started!&#39;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, open your terminal and run the server:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node index.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After starting the server, go visit localhost:5000. If everything goes well, you should see the message we wrote.&lt;/p&gt;
&lt;p&gt;Ok, let&amp;rsquo;s understand our code. First we imported the Express library, and then we passed the &lt;strong&gt;express()&lt;/strong&gt; function to a variable. Created a variable called PORT to store server&amp;rsquo;s port. And with the app.get() function we created http get request for our server. That&amp;rsquo;s explains why we see our text when we visit the site. To understand it better, see that code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;app.get( URL we want to get our request, function (request, response) { ... } )

// you can also use other requests as well

app.post()   // post request, to send data to server
app.patch()  // patch request, to update data
app.put()    // put request, to update data if not create data
app.delete() // delete request, to delete data
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Last part is for the listening &lt;strong&gt;port &lt;strong&gt;we defined earlier. It&amp;rsquo;s works when we hit our server with that port number, that&amp;rsquo;s why we added port number to url. (localhost&lt;/strong&gt;:5000&lt;/strong&gt;)&lt;/p&gt;
</description>
</item>
    
    <item>
<title>What is Wordpress?</title>
<link>http://localhost:5500/blog/what-is-wordpress/</link>
<pubDate>Fri, 12 Feb 2021 07:58:47 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/what-is-wordpress/</guid>
<description>&lt;p&gt;Wordpress is an &lt;strong&gt;open-source&lt;/strong&gt; website builder. With Wordpress you can create blogs, e-commerce shops, landing pages and more&amp;hellip; It has a marketplace for extensions and themes.&lt;/p&gt;
&lt;h3 id=&#34;is-it-really-open-source&#34;&gt;Is it really open-source?&lt;/h3&gt;
&lt;p&gt;Yes, you can find its &lt;a href=&#34;https://github.com/WordPress/WordPress&#34;&gt;github repo&lt;/a&gt;. Open-source is its main feature. That&amp;rsquo;s why it&amp;rsquo;s free. Also, it&amp;rsquo;s written in PHP 🐘&lt;/p&gt;
&lt;h3 id=&#34;how-can-i-start-using-it&#34;&gt;How can I start using it?&lt;/h3&gt;
&lt;p&gt;You can start using Wordpress in two ways. The first one to go &lt;a href=&#34;https://wordpress.com/&#34;&gt;wordpress.com&lt;/a&gt; and choose a plan for your needs. And the second one is to go &lt;a href=&#34;https://wordpress.org/download/&#34;&gt;wordpress.org&lt;/a&gt; and download the latest version. And then find yourself a hosting provider to store your website. Also, you need to find a domain and connect it to your hosting. After all, you have to upload your Wordpress inside your hosting. And you&amp;rsquo;re ready to run the installation. The process looks long, but it&amp;rsquo;s not 🙂&lt;/p&gt;
&lt;p&gt;By the way, if you&amp;rsquo;re thinking to host Wordpress on your own, check out my &lt;a href=&#34;https://m.do.co/c/217fc00c5e4d&#34;&gt;Digital Ocean&lt;/a&gt; link 😉&lt;/p&gt;
&lt;h3 id=&#34;some-useful-tips&#34;&gt;Some useful tips&lt;/h3&gt;
&lt;p&gt;In Wordpress you can download &amp;amp; install a lot of free &amp;amp; paid extensions. But you have to know, some extensions are slowing down your site. Also, if you have too many extensions, that also slows down your site.&lt;/p&gt;
&lt;p&gt;Always keep your extensions, themes and Wordpress updated.&lt;/p&gt;
&lt;p&gt;To find beautiful themes, I suggest &lt;a href=&#34;https://themeforest.net/&#34;&gt;themeforest.net&lt;/a&gt;. They have tons of alternatives and different price points.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>How to filter your business ideas?</title>
<link>http://localhost:5500/blog/how-to-filter-your-business-ideas/</link>
<pubDate>Thu, 11 Feb 2021 19:14:50 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/how-to-filter-your-business-ideas/</guid>
<description>&lt;p&gt;I started to read a book called &lt;strong&gt;The Personal MBA, &lt;strong&gt;it&amp;rsquo;s written by&lt;/strong&gt; Josh Kaufman&lt;/strong&gt;. And he&amp;rsquo;s sharing a method to filter your business ideas. I want to share it with you.&lt;/p&gt;
&lt;p&gt;There are ten questions, and you have to give them &lt;strong&gt;points from 0 to 10&lt;/strong&gt;. It&amp;rsquo;s crucial to provide points carefully. You don&amp;rsquo;t want to give them more than they&amp;rsquo;re. 0 is the worst, no one wants that, and 10 is the perfect everybody wants that. Ok, let&amp;rsquo;s move to questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Urgency&lt;/strong&gt;: Are people want that, need that right now?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Market Size&lt;/strong&gt;: How many people buying that stuff?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pricing Potential&lt;/strong&gt;: What is the maximum price point for a typical customer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cost of Customer Acquisition&lt;/strong&gt;: How easy to get a new customer? What is the average cost of closing a sale?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cost of Providing Value&lt;/strong&gt;: What is the cost with money also with time to produce your product?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Uniqueness of The Product&lt;/strong&gt;: What&amp;rsquo;s your difference from your competitors?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Required Time to Enter Market&lt;/strong&gt;: How much time do you need to start selling?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pre Investment&lt;/strong&gt;: How much money can you invest in your business before start selling?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Selling Additional Products Potential&lt;/strong&gt;: What is the potential to sell other things with your product?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Continuity Potential&lt;/strong&gt;: How much work do you need to continue selling?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now you have to give each question a point. Don&amp;rsquo;t forget to be honest with yourself. And then sum all the points. If the point is 50 or under 50, go to the next idea. If it&amp;rsquo;s between 50 and 75, maybe you have a chance with it. But keep in mind, it can take too much resource to succeed. If your point is 75 or higher, go for it! You found something valuable and promising.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>How to get more productive</title>
<link>http://localhost:5500/blog/how-to-get-more-productive/</link>
<pubDate>Wed, 03 Feb 2021 07:02:15 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/how-to-get-more-productive/</guid>
<description>&lt;p&gt;In today&amp;rsquo;s world, getting distracted is super easy. Also, for a big chunk of young people, doing something is worthless. And I want to disagree with that. We&amp;rsquo;re human because we can do whatever we want. We can build softwares, buildings, and new technologies. To move humanity forward, we have to do.&lt;/p&gt;
&lt;p&gt;For myself, I&amp;rsquo;m currently a student (btw, I don&amp;rsquo;t like university education 😕), and because of the pandemic, we have online lessons. I don&amp;rsquo;t have to go to school every day, and I don&amp;rsquo;t have to go by bus with all the people on it. For me, things are going well, and I can code more, learn more and create more.&lt;/p&gt;
&lt;p&gt;Ok, but how to create more?&lt;/p&gt;
&lt;p&gt;Well, as I understood, you have to force yourself to create something every day. Currently, I&amp;rsquo;m writing on my &lt;a href=&#34;http://localhost:5500/i-decided-to-write-everyday/&#34;&gt;blog&lt;/a&gt; every morning, and I feel better. I started to post more on my social media accounts, and they&amp;rsquo;re not food or travel photos. I&amp;rsquo;m trying to showcase my work and create value for other people. As a result, I started to get more followers (you can check out the &lt;a href=&#34;http://localhost:5500/contact/&#34;&gt;contact&lt;/a&gt; page to follow me 😉).&lt;/p&gt;
&lt;p&gt;Try to find a place with productive people for me; I&amp;rsquo;m traveling around &lt;a href=&#34;https://www.indiehackers.com/&#34;&gt;IndieHackers&lt;/a&gt;, &lt;a href=&#34;https://www.producthunt.com/&#34;&gt;ProductHunt&lt;/a&gt;, Twitter, and Instagram. For Twitter and Instagram, you have to limit yourself to specific people because a lot of people are just doing nothing, and your time is valuable, so be careful.&lt;/p&gt;
&lt;p&gt;Also, don&amp;rsquo;t care too much about what other people tell you. You know yourself better than anybody. Try new things to get more creative and be consistent.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Programming Languages for Beginners</title>
<link>http://localhost:5500/blog/programming-languages-for-beginners/</link>
<pubDate>Tue, 02 Feb 2021 07:39:41 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/programming-languages-for-beginners/</guid>
<description>&lt;p&gt;A lot of people want to start programming but usually, they don&amp;rsquo;t know where to start. I would like to share my thoughts with you.&lt;/p&gt;
&lt;h3 id=&#34;python-&#34;&gt;&lt;strong&gt;Python&lt;/strong&gt; 🐍&lt;/h3&gt;
&lt;p&gt;I know, it&amp;rsquo;s become traditional but, it&amp;rsquo;s true :) If you want to learn the basics about programming Python will help you. Also, if you want to learn how about &lt;strong&gt;machine learning &amp;amp; neural network&lt;/strong&gt; stuff you also need to learn Python.&lt;/p&gt;
&lt;h3 id=&#34;javascript&#34;&gt;&lt;strong&gt;Javascript&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;People are misunderstand this language, &lt;strong&gt;it&amp;rsquo;s not similar to Java&lt;/strong&gt;, they&amp;rsquo;re different.&lt;/p&gt;
&lt;p&gt;Javascript first started for web applications and it&amp;rsquo;s working on your browser not in the server. But today you can also run it on your server and that&amp;rsquo;s super cool. That means you can create full stack web application with only Javascript.&lt;/p&gt;
&lt;p&gt;It has popular frameworks like &lt;strong&gt;React, Vue, Angular and Svelte&lt;/strong&gt;. But for beginners I suggest learning basic Javascript to understand things well. And then if you want to you can start learning frameworks.&lt;/p&gt;
&lt;h3 id=&#34;php-&#34;&gt;&lt;strong&gt;PHP&lt;/strong&gt; 🐘&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;PHP is server side programming language&lt;/strong&gt;, that means your code is running on server. PHP mainly used for web development and it&amp;rsquo;s doing the job very well. You can use MySql for storing data and basic CRUD operations. It&amp;rsquo;s super easy to learn and easy to create what you want.&lt;/p&gt;
&lt;p&gt;Also, &lt;strong&gt;Wordpress is created using PHP&lt;/strong&gt;, that&amp;rsquo;s explain why it&amp;rsquo;s used worldwide.&lt;/p&gt;
&lt;p&gt;I started with PHP and now I&amp;rsquo;m playing around with mainly Javascript. But it doesn&amp;rsquo;t matter what you choose, &lt;strong&gt;you have to start doing something&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Here are good resources to start learning programming:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/user/TechGuyWeb&#34;&gt;Traversy Media&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCW5YeuERMmlnqo4oq8vwUpg&#34;&gt;The Net Ninja&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCSJbGtTlrDami-tDGPUV9-w&#34;&gt;Academind&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ&#34;&gt;sentdex&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UClb90NQQcskPUGDIXsQEz5Q&#34;&gt;Dev Ed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ&#34;&gt;freeCodeCamp.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.w3schools.com/&#34;&gt;W3Schools Online Web Tutorials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.programiz.com/&#34;&gt;Programiz: Learn to Code for Free&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://flaviocopes.com/&#34;&gt;Flavio Copes&lt;/a&gt;&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Power of Programming</title>
<link>http://localhost:5500/blog/power-of-programming/</link>
<pubDate>Mon, 01 Feb 2021 06:01:16 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/power-of-programming/</guid>
<description>&lt;p&gt;We&amp;rsquo;re living in a world of information with the power of the internet. Right now, you can learn whatever you want from the internet, and that&amp;rsquo;s crazy!
I want to give you an example:&lt;/p&gt;
&lt;p&gt;When I was 14, I&amp;rsquo;m playing computer games, watching gaming videos and live streams. And then, if I remember correctly, I found a video on YouTube about creating your own game. For a gaming monster, it&amp;rsquo;s a renaissance.&lt;/p&gt;
&lt;p&gt;I started to learn Game Maker Studio. It&amp;rsquo;s a software that helps you to create your own 2d games with less code (but you still have to write a lot of code). At that stage, I&amp;rsquo;m not good at English, and because of that, I only watched Turkish tutorials to understand that. One day I decided to watch English videos because they&amp;rsquo;re doing great stuff. I started to watch and copy-pasted what they did :) As you can imagine, the results are not good, but I liked the process and concept of creating your own things.&lt;/p&gt;
&lt;p&gt;After one year, I started to learn HTML &amp;amp; CSS to start web programming. It&amp;rsquo;s giving you a lot of things to interact and build. I built a ton of websites and deleted them (creating a lot is good but don&amp;rsquo;t delete them. You&amp;rsquo;ll want to see what you did before ;) )&lt;/p&gt;
&lt;p&gt;And I met with the PHP. It&amp;rsquo;s a game-changer for me. With PHP, you can write server-side programs and work with databases. Again I created a ton of stuff. I learned a little bit of javascript. I don&amp;rsquo;t know why but, I stuck with these tools for three years! I only used them to create websites, but it helped me to learn how they work and how to turn my ideas into reality.&lt;/p&gt;
&lt;p&gt;When I started to watch what the world is doing, I began to learn new tools, frameworks, and cool stuff. Right now, I&amp;rsquo;m 10x of myself, but it cannot happen if I didn&amp;rsquo;t start to learn to program.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re doing nothing in your free time or don&amp;rsquo;t know what to do, please consider learning to program.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>What is SEO?</title>
<link>http://localhost:5500/blog/what-is-seo/</link>
<pubDate>Sat, 30 Jan 2021 07:41:58 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/what-is-seo/</guid>
<description>&lt;p&gt;&lt;strong&gt;Search Engine Optimization (SEO)&lt;/strong&gt; is making information more understandable and reachable for the internet.&lt;/p&gt;
&lt;p&gt;To understand it better we have to know how websites are created. They&amp;rsquo;re created with code, million lines of code! For a normal person, code is just big chunk of words &amp;amp; symbols. For search engines it different, it&amp;rsquo;s information to display on your browser.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s important to make the code clear &amp;amp; easy to understand for search engines. That&amp;rsquo;s where we start to talk SEO.&lt;/p&gt;
&lt;p&gt;Ok, you made it magical, now give me an example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;description&amp;quot; content=&amp;quot;Meta Description&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This code shown you when you search something.
&lt;img src=&#34;seo-description-screenshot.png&#34; alt=&#34;&#34;&gt;
If you make your website more SEO efficent, your website will have a better chance to listed on the top, and that&amp;rsquo;s why people are hiring SEO experts.&lt;/p&gt;
&lt;p&gt;There is something we need talk about, when you do improvements on your SEO you won&amp;rsquo;t see the results right after that, it takes some time. Because search engines need to index your new changes.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>📝 I decided to write every day</title>
<link>http://localhost:5500/blog/i-decided-to-write-everyday/</link>
<pubDate>Fri, 29 Jan 2021 17:50:21 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/i-decided-to-write-everyday/</guid>
<description>&lt;p&gt;After my finals ended I decided focus on my personal brand to create a community who love my work and want to see my work continue. After years what I learned from people who created unbreakable products &amp;amp; things is, &lt;strong&gt;consistency &amp;amp; patience&lt;/strong&gt;. In order to make it happen I&amp;rsquo;ll start to post on my blog every day. They all will not about programming. I&amp;rsquo;m planning to write about design, business, life maybe space&amp;hellip; That&amp;rsquo;s why it&amp;rsquo;s called personal blog 🙂&lt;/p&gt;
</description>
</item>
    
    <item>
<title>I switched from HUGO to Ghost, but why?</title>
<link>http://localhost:5500/blog/why-i-switched-from-hugo-to-ghost/</link>
<pubDate>Wed, 27 Jan 2021 08:56:27 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/why-i-switched-from-hugo-to-ghost/</guid>
<description>&lt;p&gt;For a long time I used just plain HTML &amp;amp; CSS for my website, it&amp;rsquo;s doing the job but then I switched to Gatsby (tried it because it&amp;rsquo;s popular) and then HUGO.&lt;/p&gt;
&lt;p&gt;HUGO is the perfect static site generator I have ever seen, it&amp;rsquo;s fast, relaible and easy to use. But,right now I&amp;rsquo;m not using HUGO because I found something super awesome and I want to share with you.&lt;/p&gt;
&lt;h2 id=&#34;what-is-ghost&#34;&gt;What is Ghost?&lt;/h2&gt;
&lt;p&gt;I started to use &lt;a href=&#34;https://ghost.org&#34;&gt;Ghost&lt;/a&gt;. Ghost is MVC with headless feature. That means I can use it like &lt;a href=&#34;https://wordpress.org&#34;&gt;Wordpress&lt;/a&gt; or like content api. It gives you content management, themes and bunch of integrations. For now I&amp;rsquo;m using the default theme come with Ghost but I&amp;rsquo;m planning to build my own frontend and connect it to &lt;a href=&#34;https://ghost.org/docs/content-api/&#34;&gt;Ghost content API&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;how-to-run-ghost&#34;&gt;How to run Ghost?&lt;/h2&gt;
&lt;p&gt;Ghost is open-source, that means you can see the &lt;a href=&#34;https://github.com/TryGhost/Ghost&#34;&gt;source code&lt;/a&gt;. It&amp;rsquo;s written with Node.js so, you can run it on your local machine, servers or on their paid hosting server. Before I used simple hosting to serve my HUGO website but right now I&amp;rsquo;m using droplet (cheapest one (5$/m) 🙂) from &lt;a href=&#34;https://m.do.co/c/217fc00c5e4d&#34;&gt;Digital Ocean(You can get free 100$ credit for 60 days)&lt;/a&gt;. Also, Digital Ocean have Ghost installer in the marketplace and that&amp;rsquo;s super awesome for beginners or who want to taste Ghost in minutes.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t want to manage servers or updates Ghost.org have &lt;a href=&#34;https://ghost.org/pricing/&#34;&gt;different plans&lt;/a&gt; to help you.&lt;/p&gt;
&lt;h2 id=&#34;how-its-look-like&#34;&gt;How it&amp;rsquo;s look like?&lt;/h2&gt;
&lt;p&gt;To understand Ghost, I&amp;rsquo;ll share screenshots with you.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ghost-post-page.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Post Editor&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ghost-posts-page.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Posts Page&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ghost-pages-page.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pages Page&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ghost-tags-page.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Tags Page&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ghost-staff-page.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Staff Page&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ghost-settings-page.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Settings Page&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ghost-design-page.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Design Page&lt;/p&gt;
&lt;p&gt;I hope these screenshots give you an idea about Ghost.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Do I like Ghost? absolutely! Do I like HUGO? Yes! But for my needs I&amp;rsquo;ve chosen Ghost, it&amp;rsquo;s giving me ability to manage my content &amp;amp; pages also, I can connect it&amp;rsquo;s API to my frontend with my own design. After switching from HUGO to Ghost I don&amp;rsquo;t need to store all my posts and manage it&amp;rsquo;s Github repo also it&amp;rsquo;s Github Actions.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>How to Create VsCode Theme</title>
<link>http://localhost:5500/blog/how-to-create-vscode-theme/</link>
<pubDate>Sun, 20 Dec 2020 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/how-to-create-vscode-theme/</guid>
<description>&lt;p&gt;VS Code is popular code editor around developers. It has it&amp;rsquo;s own marketplace so, you can easly customize your editor.&lt;/p&gt;
&lt;p&gt;Recently I developed my first VS Code theme and extension. I want to share with you how I did and how you can build your own.&lt;/p&gt;
&lt;h2 id=&#34;what-is-theme&#34;&gt;What is theme?&lt;/h2&gt;
&lt;p&gt;Themes are simply customized color palettes for editors. They define colors in json file so, you can download and use it on your editor.&lt;/p&gt;
&lt;h2 id=&#34;what-is-required-to-get-started&#34;&gt;What is required to get started?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VS Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you installed these programs, we can move to installing required packages.&lt;/p&gt;
&lt;p&gt;We have to install some packages to start with theme boilerplate.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm i -g yo generator-code
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we have VS Code extension generator. To start developing, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yo code
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After running it, you should see something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;yo-code-screenshot-1.png&#34; alt=&#34;yo-code-screenshot-1&#34;&gt;&lt;/p&gt;
&lt;p&gt;Select &lt;strong&gt;New Color Theme&lt;/strong&gt; and hit enter.&lt;/p&gt;
&lt;p&gt;In this tutorial we build our theme from scratch so, pick &lt;strong&gt;No, start fresh&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;yo-code-screenshot-2.png&#34; alt=&#34;yo-code-screenshot-2&#34;&gt;&lt;/p&gt;
&lt;p&gt;Answer the questions:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;yo-code-screenshot-3.png&#34; alt=&#34;yo-code-screenshot-3&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now yeoman should create a new folder named as your theme name.&lt;/p&gt;
&lt;p&gt;Open your theme folder with VS Code to get started.&lt;/p&gt;
&lt;p&gt;You should see this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;screenshot-4.png&#34; alt=&#34;screenshot-4&#34;&gt;&lt;/p&gt;
&lt;p&gt;Your will work with json file to edit theme.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;colors&lt;/strong&gt; you can edit background, foreground and active colors. Just type something you want and it&amp;rsquo;ll autofill for you.&lt;/p&gt;
&lt;p&gt;Inside the &lt;strong&gt;tokenColors&lt;/strong&gt; as you can guess we&amp;rsquo;ll work with syntax highlighting. You can edit colors for general or specific languages.&lt;/p&gt;
&lt;p&gt;Please take a look at the default code to understand it better.&lt;/p&gt;
&lt;h2 id=&#34;how-to-see-the-theme-in-real-time&#34;&gt;How to see the theme in real time?&lt;/h2&gt;
&lt;p&gt;In VS Code press &lt;code&gt;f5&lt;/code&gt; to run debug mode. You should see another VS Code with your theme.&lt;/p&gt;
&lt;p&gt;When you make changes it&amp;rsquo;ll automaticly update itself.&lt;/p&gt;
&lt;h2 id=&#34;how-to-find-token-names&#34;&gt;How to find token names?&lt;/h2&gt;
&lt;p&gt;VS Code give us token viewer tool. To run it type &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; and search for &lt;strong&gt;Developer: Inspect Editor Tokens and Scopes&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;After, just click the text you want to see. It&amp;rsquo;ll show you what tokens it have.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;screenshot-5.png&#34; alt=&#34;screenshot-5&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-to-change-colors&#34;&gt;How to change colors?&lt;/h2&gt;
&lt;p&gt;With inspect editor find your token and search it inside theme json file. If you can&amp;rsquo;t find it no worries you can easly add your own token.&lt;/p&gt;
&lt;p&gt;For this example I&amp;rsquo;ll go with the public syntax. To find it I&amp;rsquo;ll search for &lt;strong&gt;storage.modifier&lt;/strong&gt;. You can also search it specific for php.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;screenshot-6.png&#34; alt=&#34;screenshot-6&#34;&gt;&lt;/p&gt;
&lt;p&gt;To change the color just edit &lt;strong&gt;foreground&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;screenshot-7.png&#34; alt=&#34;screenshot-7&#34;&gt;&lt;/p&gt;
&lt;p&gt;As you can see all &lt;strong&gt;storage.modifier&lt;/strong&gt; tokens are changed.&lt;/p&gt;
&lt;h2 id=&#34;further-more&#34;&gt;Further more&lt;/h2&gt;
&lt;p&gt;VS Code shared articles on their website about publishing your own theme.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/api/extension-guides/color-theme&#34;&gt;Visit VS Code&amp;rsquo;s website&lt;/a&gt; to read more.&lt;/p&gt;
&lt;p&gt;Watch my video tutorial ☝&lt;/p&gt;
</description>
</item>
    
    <item>
<title>What is domain and why it&#39;s important</title>
<link>http://localhost:5500/blog/what-is-domain-and-why-its-important/</link>
<pubDate>Mon, 14 Dec 2020 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/what-is-domain-and-why-its-important/</guid>
<description>&lt;h2 id=&#34;what-is-domain&#34;&gt;What is domain?&lt;/h2&gt;
&lt;p&gt;Domains are public addresses for websites.&lt;/p&gt;
&lt;p&gt;When you &lt;a href=&#34;http://localhost:5500/&#34;&gt;berkaycubuk.com&lt;/a&gt; you’re typing my public website address. My domain is redirecting you to my server’s ip address, but it happens fast, and in the url, you will continue to see my public address.&lt;/p&gt;
&lt;h2 id=&#34;why-its-important&#34;&gt;Why it&amp;rsquo;s important?&lt;/h2&gt;
&lt;p&gt;If you’re creating a website for a brand, yourself, or a client, you’re trying to create value with that. To create value, you need a good name, something special, also something easy to remember.&lt;/p&gt;
&lt;p&gt;I want to give you an example:&lt;/p&gt;
&lt;p&gt;Think you’re a coffee shop, and you have a website. You started to advertise your website on social media. But there is something important your website url is “superawesomecoffeshop.wordpress.com”. People will see your advertising, but when they scroll away, they don’t remember it.&lt;/p&gt;
&lt;p&gt;In another perspective, you have a website url called “starbucks.com”. It is much easier to remember.&lt;/p&gt;
&lt;h2 id=&#34;how-to-buy-one&#34;&gt;How to buy one?&lt;/h2&gt;
&lt;p&gt;In today&amp;rsquo;s world, you have ton of alternatives to buy a domain name. Just search on the internet and buy somewhere you like. But my personal advice will don’t buy from godaddy. They’ll give you the domain much cheaper, but after one year, they’ll raise the price.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Java Variables</title>
<link>http://localhost:5500/blog/java-variables/</link>
<pubDate>Thu, 19 Nov 2020 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/java-variables/</guid>
<description>&lt;p&gt;Variables are important pieces in programming. We are using them to store data values. In java, we have different types of variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;float&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;char&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;byte&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;short&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;long&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;double&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt; (I don&amp;rsquo;t know why it&amp;rsquo;s capital 😥)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-to-create-or-declare-variables&#34;&gt;How to create or declare variables&lt;/h2&gt;
&lt;p&gt;First specify the type and give it a name and then assign it a value.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;variable_type variable_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; value&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String userName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Berkay&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; likeCount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 5&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also, you can declare a variable without value.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; c&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you assign it new value, it will update itself.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Turkey&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;country&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// Turkey
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;country &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;England&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;country&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// England
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s learn the types with examples.&lt;/p&gt;
&lt;h2 id=&#34;numbers&#34;&gt;Numbers&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; number1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 10&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; number2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 4&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// you have to cast float
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; number3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 4&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;number3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 4&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;5f&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// this is shorter way
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;characters-and-strings&#34;&gt;Characters and Strings&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; character &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String string &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;boolean&#34;&gt;Boolean&lt;/h2&gt;
&lt;p&gt;Boolean type only accepts &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;boolean&lt;/span&gt; bool &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bool &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;extra-&#34;&gt;Extra 😉&lt;/h2&gt;
&lt;p&gt;You can merge strings with &lt;code&gt;+&lt;/code&gt;. Let&amp;rsquo;s see it in action.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MyClass&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String args&lt;span style=&#34;color:#f92672&#34;&gt;[])&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String fileName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;index&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String fileExt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;html&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Your file =&amp;gt; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; fileName &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; fileExt&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; Your file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; index.html
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
</item>
    
    <item>
<title>Java Comments</title>
<link>http://localhost:5500/blog/java-comments/</link>
<pubDate>Wed, 18 Nov 2020 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/java-comments/</guid>
<description>&lt;p&gt;Comments, comments and comments. They&amp;rsquo;re important part of our lives. With comments we can explain what we tried to do on our code.&lt;/p&gt;
&lt;p&gt;In java there are 3 types of comments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Single line comments&lt;/li&gt;
&lt;li&gt;Multi line comments&lt;/li&gt;
&lt;li&gt;Documentation comments&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;single-line-comments&#34;&gt;Single line comments&lt;/h2&gt;
&lt;p&gt;Single line comments starts and ends in the same line. To write single line comment just type &lt;code&gt;//&lt;/code&gt; and write your comment.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// My hello function
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Yes, it prints hello
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;multi-line-comments&#34;&gt;Multi line comments&lt;/h2&gt;
&lt;p&gt;If you want to write something long or more tidy you can use multi line comments. To use it type &lt;code&gt;/*&lt;/code&gt; and in the of your comment type &lt;code&gt;*/&lt;/code&gt;. It&amp;rsquo;s important to close your comment.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;  This function prints &amp;#34;Hello&amp;#34; in your console.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;  * Some people use it like that
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;  */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;documentation-comments&#34;&gt;Documentation comments&lt;/h2&gt;
&lt;p&gt;With javadoc we can generate documentation for our app. To make it proper we should add some special comments. To start documentation comment type &lt;code&gt;/**&lt;/code&gt; and in the end close it with &lt;code&gt;*/&lt;/code&gt;. Also we have some tags available for us.
TagDescriptionSyntax@authorAuthor of class@author name{@code}Displays text in code font without interpreting the text as HTML markup or nested javadoc tags.{@code text}{@docRoot}Represents the relative path to the generated document&amp;rsquo;s root directory from any generated page.{@docRoot}@deprecatedAdds a comment indicating that this API should no longer be used@deprecated deprecatedtext@exceptionAdds a throws subheading to the generated documentation with the classname and description text.@exception class-name description{@inheritDoc}Inherits a comment from the nearest inheritable class or implementable interface.Inherits a comment from the immediate surperclass.{@link}Inserts an in-line link with the visible text label that points to the documentation for the specified package, class, or member name of a referenced class.{@link package.class#member label}{@linkplain}Identical to {@link}, except the link&amp;rsquo;s label is displayed in plain text than code font.{@linkplain package.class#member label}@paramAdds a parameter with the specified parameter-name followed by the specified description to the &amp;ldquo;Parameters&amp;rdquo; section.@param parameter-name description@returnAdds a &amp;ldquo;Returns&amp;rdquo; section with the description text.@return description@seeAdds a &amp;ldquo;See Also&amp;rdquo; heading with a link or text entry that points to reference.@see reference@serialUsed in the doc comment for a default serializable field.@serial field-description@serialDataDocuments the data written by the writeObject( ) or writeExternal( ) methods.@serialData data-description@serialFieldDocuments an ObjectStreamField component.@serialField field-name field-type field-description@sinceAdds a &amp;ldquo;Since&amp;rdquo; heading with the specified since-text to the generated documentation.@since release@throwsThe @throws and @exception tags are synonyms.@throws class-name description{@value}When {@value} is used in the doc comment of a static field, it displays the value of that constant.{@value package.class#field}@versionAdds a &amp;ldquo;Version&amp;rdquo; subheading with the specified version-text to the generated docs when the -version option is used.@version version-text
That&amp;rsquo;s look boring let&amp;rsquo;s see it on action.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* The FindAvg program implements an application that
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* simply calculates average of three integers and Prints
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* the output on the screen.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* @author  Name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* @version 1.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* @since   2020-11-18
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;FindAvg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    * This method is used to find average of three integers.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    * @param numA This is the first parameter to findAvg method
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    * @param numB  This is the second parameter to findAvg method
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    * @param numC  This is the second parameter to findAvg method
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    * @return int This returns average of numA, numB and numC.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;findAvg&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; numA&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; numB&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; numC&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;numA &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; numB &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; numC&lt;span style=&#34;color:#f92672&#34;&gt;)/&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/**
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    * This is the main method which makes use of findAvg method.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    * @param args Unused.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    * @return Nothing.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String args&lt;span style=&#34;color:#f92672&#34;&gt;[])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        FindAvg obj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FindAvg&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; avg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;findAvg&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;10&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 20&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; 30&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Average of 10, 20 and 30 is :&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; avg&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/comments-in-java/&#34;&gt;https://www.geeksforgeeks.org/comments-in-java/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Introduction to Java</title>
<link>http://localhost:5500/blog/java-introduction/</link>
<pubDate>Tue, 17 Nov 2020 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/java-introduction/</guid>
<description>&lt;h2 id=&#34;what-is-java&#34;&gt;What is Java?&lt;/h2&gt;
&lt;p&gt;Java is not only programming language, Java is a platform with multiple sub items:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Programming language&lt;/li&gt;
&lt;li&gt;Infrastructure for Java apps&lt;/li&gt;
&lt;li&gt;Libraries and tools for different areas like desktop, mobile, watch, web&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Java have 3 different connected platforms:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java Standart Edition (JSE)&lt;/strong&gt;: Core for basic Java apps.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java Enterprise Edition (JEE)&lt;/strong&gt;: For big, distributed commercial Java apps.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java Micro Edition (JME)&lt;/strong&gt;: For small devices like mobile, watch&amp;hellip;&lt;/p&gt;
&lt;p&gt;To use these platforms, first you have to learn JSE, because other platforms are based on JSE.&lt;/p&gt;
&lt;h2 id=&#34;java-is-platform-independent&#34;&gt;Java is platform independent&lt;/h2&gt;
&lt;p&gt;Java is platform independent so you can develop your java application in your current device and use it in any other device.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Java has &amp;ldquo;Write once, run anywhere&amp;rdquo; philosophy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example I can create calculator application on my windows machine and then I can use it on my linux machine. That&amp;rsquo;s super cool 🤯&lt;/p&gt;
&lt;p&gt;But how it&amp;rsquo;s possible? It&amp;rsquo;s simple because java uses &lt;strong&gt;Java Virtual Machine (JVM)&lt;/strong&gt;. First we writing our java application and compiling it with java compiler. After compiling it&amp;rsquo;s produce &lt;strong&gt;class&lt;/strong&gt; files with &lt;strong&gt;.class&lt;/strong&gt; extension. Class files are contain platform independent byte-code binary data that can be interpreted by any &lt;strong&gt;JVM&lt;/strong&gt;. But that means we have JVM&amp;rsquo;s that designed for each platform. This JVM thing lowers our speed but that&amp;rsquo;s the price for independence (Talking about miliseconds 😛).&lt;/p&gt;
&lt;p&gt;Also we have &lt;strong&gt;JDK&lt;/strong&gt; and &lt;strong&gt;JRE&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JDK&lt;/strong&gt; (Java Development Kit) is what we&amp;rsquo;re using to develop java applications. &lt;strong&gt;JRE&lt;/strong&gt; (Java Runtime Enviorement) is what we need to run java applications.&lt;/p&gt;
&lt;h2 id=&#34;lets-start-programming&#34;&gt;Let&amp;rsquo;s start programming&lt;/h2&gt;
&lt;p&gt;Before start programming you have to setup your enviorement. It&amp;rsquo;s different for each operating system so you can take quick look on the web.&lt;/p&gt;
&lt;p&gt;Start with something well known:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;FirstApp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// also your filename =&amp;gt; FirstApp.java
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// standart structure for main function
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// do what you want
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    System&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello World!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// print string to the console
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output will be like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; Hello World!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;OK, looks cool but how did I compile and run that 🤔 If you want to learn the core concept, open your terminal and run &lt;code&gt;javac FirstApp.java&lt;/code&gt;. This command will create &lt;strong&gt;FirstApp.class&lt;/strong&gt; file. To run the program just type &lt;code&gt;java FirstApp&lt;/code&gt;. That&amp;rsquo;s how we compile and run java application, but in reality that&amp;rsquo;s not efficent. To make it better we use IDE&amp;rsquo;s. There are good alternatives such as &lt;a href=&#34;https://www.eclipse.org/downloads/&#34;&gt;Eclipse&lt;/a&gt;, &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;Intellij IDEA&lt;/a&gt;, &lt;a href=&#34;https://netbeans.org/&#34;&gt;Netbeans&lt;/a&gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;If you want to learn more about java I&amp;rsquo;m leaving some links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.javatpoint.com/java-tutorial&#34;&gt;Javatpoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tutorialspoint.com/java/index.htm&#34;&gt;Tutorials Point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.w3schools.com/java/&#34;&gt;W3 Schools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.programiz.com/java-programming/hello-world&#34;&gt;Programiz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Markdown Guide</title>
<link>http://localhost:5500/blog/markdown-guide/</link>
<pubDate>Mon, 16 Nov 2020 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/markdown-guide/</guid>
<description>&lt;h2 id=&#34;what-is-markdown&#34;&gt;What is Markdown?&lt;/h2&gt;
&lt;p&gt;Markdown is a lightweight markup language with plain-text-formatting syntax, created in 2004 by &lt;strong&gt;John Gruber&lt;/strong&gt; and &lt;strong&gt;Aaron Swartz&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s basically helping us to create rich structured and lighweight text files without special software or editor. You can create your own markdown document with a notepad or any text editor. To create markdown file you have to give it &lt;strong&gt;.md&lt;/strong&gt; extension.&lt;/p&gt;
&lt;h2 id=&#34;markdown-basics&#34;&gt;Markdown Basics&lt;/h2&gt;
&lt;h3 id=&#34;headings&#34;&gt;Headings&lt;/h3&gt;
&lt;p&gt;We have 6 different headings in HTML. First one the biggest, last one is the smallest. We&amp;rsquo;re using &lt;code&gt;#&lt;/code&gt; to start using heading. To change it&amp;rsquo;s level we can add more &lt;code&gt;#&lt;/code&gt;.
MarkdownDescriptionHTML equivalent&lt;code&gt;# Heading 1&lt;/code&gt;Biggest heading&lt;code&gt;&amp;lt;h1&amp;gt;Heading 1&amp;lt;/h1&amp;gt;``## Heading 2&lt;/code&gt;2. heading and going smaller&lt;code&gt;&amp;lt;h2&amp;gt;Heading 2&amp;lt;/h2&amp;gt;``### Heading 3 &lt;/code&gt;3. heading&lt;code&gt;&amp;lt;h3&amp;gt;Heading 3&amp;lt;/h3&amp;gt;``#### Heading 4&lt;/code&gt;4. heading&lt;code&gt;&amp;lt;h4&amp;gt;Heading 4&amp;lt;/h4&amp;gt;``##### Heading 5&lt;/code&gt;5. heading&lt;code&gt;&amp;lt;h5&amp;gt;Heading 5&amp;lt;/h5&amp;gt;``###### Heading 6&lt;/code&gt;Smallest heading&lt;code&gt;&amp;lt;h6&amp;gt;Heading 6&amp;lt;/h6&amp;gt;&lt;/code&gt;
&lt;em&gt;Please make sure you give enough space between # and the heading name.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;paragraphs&#34;&gt;Paragraphs&lt;/h3&gt;
&lt;p&gt;Just type what you want to display as paragraph.
MarkdownDescriptionHTML equivalent&lt;code&gt;Paragraph 🙂&lt;/code&gt;Simple paragraph in markdown&lt;code&gt;&amp;lt;p&amp;gt;Paragraph 🙂&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;bold&#34;&gt;Bold&lt;/h3&gt;
&lt;p&gt;We can make some part of text &lt;strong&gt;bold&lt;/strong&gt;.
MarkdownHTML equivalent&lt;code&gt;Text with **bold** text``Text with &amp;lt;strong&amp;gt;bold&amp;lt;/strong&amp;gt; text``Test with __bold__ text``Text with &amp;lt;strong&amp;gt;bold&amp;lt;/strong&amp;gt; text&lt;/code&gt;
In HTML, you can also use &lt;code&gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;&lt;/code&gt; for bold.&lt;/p&gt;
&lt;h3 id=&#34;italic&#34;&gt;Italic&lt;/h3&gt;
&lt;p&gt;MarkdownHTML equivalent&lt;code&gt;Text with *italic* text``Text with &amp;lt;i&amp;gt;italic&amp;lt;/i&amp;gt; text``Text with _italic_ text``Text with &amp;lt;i&amp;gt;italic&amp;lt;/i&amp;gt; text&lt;/code&gt;
In HTML, you can also user &lt;code&gt;&amp;lt;em&amp;gt;&amp;lt;/em&amp;gt;&lt;/code&gt; for italic.&lt;/p&gt;
&lt;h3 id=&#34;blockquotes&#34;&gt;Blockquotes&lt;/h3&gt;
&lt;p&gt;MarkdownHTML equivalent&lt;code&gt;&amp;gt; Happiness depends upon ourselves.``&amp;lt;blockquote&amp;gt;Happiness depends upon ourselves.&amp;lt;/blockquote&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;lists&#34;&gt;Lists&lt;/h3&gt;
&lt;p&gt;We can organize items using lists.&lt;/p&gt;
&lt;h4 id=&#34;ordered-lists&#34;&gt;Ordered Lists&lt;/h4&gt;
&lt;p&gt;MarkdownHTML&lt;code&gt;1. First item``&amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;First item&amp;lt;/li&amp;gt;&amp;lt;/ol&amp;gt;&lt;/code&gt;
I don&amp;rsquo;t like this explanation so the next one will be better.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## Popular code editors

1. VsCode
2. Vim
3. Sublime Text
4. Atom
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;unordered-lists&#34;&gt;Unordered Lists&lt;/h4&gt;
&lt;p&gt;MarkdownHTML&lt;code&gt;- First item``&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;First item&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;``* First item``&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;First item&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;``+ First item``&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;First item&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;images&#34;&gt;Images&lt;/h3&gt;
&lt;p&gt;We can display images with markdown.
MarkdownHTML&lt;code&gt;![alt text](image url)``&amp;lt;img src=&amp;quot;image url&amp;quot; alt=&amp;quot;alt text&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;
&lt;p&gt;We can display code blocks with unique syntax highligting.
MarkdownHTML````print &amp;ldquo;Hello World&amp;rdquo; &lt;code&gt;&amp;lt;code&amp;gt;print &amp;quot;Hello World&amp;quot;&amp;lt;/code&amp;gt;` To define language you can add the language name after the first &lt;/code&gt;. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```php

echo &amp;quot;Hello World&amp;quot;;

```
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;links&#34;&gt;Links&lt;/h3&gt;
&lt;p&gt;MarkdownHTML&lt;code&gt;Go to [Google](https://google.com)``Go to &amp;lt;a href=&amp;quot;https://google.com&amp;quot;&amp;gt;Google&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;https://en.wikipedia.org/wiki/Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.markdownguide.org/basic-syntax/&#34;&gt;https://www.markdownguide.org/basic-syntax/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
    <item>
<title>Assembly Jump Instructions</title>
<link>http://localhost:5500/blog/assembly-jump-instructions/</link>
<pubDate>Sun, 15 Nov 2020 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/assembly-jump-instructions/</guid>
<description>&lt;p&gt;With jump instructions we can control the program flow. There are different types of jumps:&lt;/p&gt;
&lt;h3 id=&#34;unconditional-jumps&#34;&gt;Unconditional jumps&lt;/h3&gt;
&lt;p&gt;With &lt;code&gt;JMP&lt;/code&gt; command we can move to another point in the program.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;JMP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;label&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;;syntax of JMP instruction
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In order to run jump instruction we should have a label. Labels are simple checkpoints to describe it to computer. We can simply declare label with adding &lt;strong&gt;&amp;quot;:&amp;quot;&lt;/strong&gt; to the end. Like other languages we cannot start with a number. Here are examples for labels:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;label1: &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AX&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;label2: &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AX&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we can try what we learned on example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.MODEL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SMALL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.STACK&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.CODE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AX&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;               &lt;span style=&#34;color:#75715e&#34;&gt;;set AX to 5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BX&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;               &lt;span style=&#34;color:#75715e&#34;&gt;;set BX to 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;JMP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;label1&lt;/span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;;go to label1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label2: &lt;span style=&#34;color:#a6e22e&#34;&gt;JMP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;label3&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;;go to label3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label1:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AX&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;BX&lt;/span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;;add BX to AX and store it in AX
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;JMP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;label2&lt;/span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;;go to label2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label3:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AX&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;C00H&lt;/span&gt;           &lt;span style=&#34;color:#75715e&#34;&gt;;terminate
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;END&lt;/span&gt;                       &lt;span style=&#34;color:#75715e&#34;&gt;;exit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;short-conditional-jumps&#34;&gt;Short Conditional Jumps&lt;/h3&gt;
&lt;p&gt;With &lt;code&gt;JMP&lt;/code&gt; instruction we can do unconditional jump but sometimes we only want to jump when some conditions are in act. To make it happen we have 3 different groups of other instructions.&lt;/p&gt;
&lt;h4 id=&#34;jump-instructions-that-test-single-flag&#34;&gt;Jump instructions that test single flag&lt;/h4&gt;
&lt;p&gt;InstructionDescriptionConditionJZ, JEJump if zero (equal)ZF = 1JC, JB, JNAEJump if carry (below, not above equal)CF = 1JSJump if signSF =1JOJump if overflowOF = 1JPE, JPJump if parity evenPF = 1
All instructions have their opposites. Like &lt;code&gt;JZ&lt;/code&gt; (Jump if zero) with &lt;code&gt;JNZ&lt;/code&gt; (Jump if not zero). Also some instructions do the same thing like &lt;code&gt;JZ&lt;/code&gt; (Jump if zero) and &lt;code&gt;JE&lt;/code&gt; (Jump if equal).&lt;/p&gt;
&lt;h4 id=&#34;jump-instructions-for-signed-numbers&#34;&gt;Jump instructions for signed numbers&lt;/h4&gt;
&lt;p&gt;InstructionDescriptionConditionJE, JZJump if equal (zero)ZF = 1JG, JNLEJump if greater (not less or equal)ZF = 0 and SF = OFJL, JNGEJump if less (not greater or equal)SF &amp;lt;&amp;gt; OFJGE, JNLJump if greater or eqaul (not less)SF = OFJLE, JNGJump if less or equal (not greater)ZF = 1 or SF &amp;lt;&amp;gt; OF
&lt;em&gt;&amp;lt;&amp;gt; is means not equal, in other words !=&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;jump-instructions-for-unsigned-numbers&#34;&gt;Jump instructions for unsigned numbers&lt;/h4&gt;
&lt;p&gt;InstructionDescriptionConditionJE, JZJump if equal (zero)ZF = 1JA, JNBEJump if above (not below or equal)CF = 0 and ZF = 0JB, JNAE, JCJump if below (not above or equal, carry)CF = 1JAE, JNB, JNCJump if above or equal (not below, not carry)CF = 0JBE, JNAJump if below or equal (not above)CF = 1 or ZF = 1
Ok, that&amp;rsquo;s look complicated. I want to give you an example to make it understandable.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.MODEL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SMALL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.STACK&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.CODE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AL&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BL&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;CMP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AL&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;BL&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;;compare AL with BL (I&amp;#39;ll explain it later...)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;JE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;equal&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;;if AL = BL, go to equal label
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CL&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;;if it&amp;#39;s run here that means AL &amp;lt;&amp;gt; BL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;JMP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;stop&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;;go to stop and move &amp;#39;N&amp;#39; to CL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  equal:          &lt;span style=&#34;color:#75715e&#34;&gt;;if it&amp;#39;s come here
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CL&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Y&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;;move &amp;#39;Y&amp;#39; to CL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  stop:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AH&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;;set interrupt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DL&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;CL&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;;set interrupt message
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AX&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;C00H&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;;terminate
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;END&lt;/span&gt;               &lt;span style=&#34;color:#75715e&#34;&gt;;exit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With this program we can compare 2 integers and tell the user are they equal or not. If you look carefully you&amp;rsquo;ll see &lt;code&gt;CMP&lt;/code&gt; command, it&amp;rsquo;s comparing 2 integers. If they are equal we move the flow to equal label, if not we are not changing the flow.&lt;/p&gt;
</description>
</item>
    
    <item>
<title>Assembly Interrupts</title>
<link>http://localhost:5500/blog/assembly-interrupts/</link>
<pubDate>Sat, 14 Nov 2020 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/assembly-interrupts/</guid>
<description>&lt;p&gt;Interrupts are simply set of procedures. We&amp;rsquo;re using interrupts with &lt;code&gt;INT&lt;/code&gt; command. Before running an interrupt we have to store some data on stack to tell interrupt what we want to do.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AH&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;;function number for outputing string to the monitor
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;LEA&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DX&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;STR&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;;store the string that we want to display
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;;run interrupt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is an axample interrupt to display string.&lt;/p&gt;
&lt;h2 id=&#34;useful-interrupts&#34;&gt;Useful Interrupts&lt;/h2&gt;
&lt;h3 id=&#34;int-10h---display&#34;&gt;INT 10H - Display&lt;/h3&gt;
&lt;p&gt;This interrupt is looking to AH register. Let&amp;rsquo;s look at it&amp;rsquo;s functions:&lt;/p&gt;
&lt;h4 id=&#34;06---clear-the-screen&#34;&gt;06 - clear the screen&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AH = 06&lt;/strong&gt;   ;function number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AL = 00&lt;/strong&gt;   ;page number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BH = 07&lt;/strong&gt;   ;default style (black background with white text)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CH = 00&lt;/strong&gt;   ;row number (start)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CL = 00&lt;/strong&gt;   ;column number (start)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DH = 00&lt;/strong&gt;   ;row number (end)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DL = 00&lt;/strong&gt;   ;column number (end)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;02---setting-the-cursor&#34;&gt;02 - setting the cursor&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AH = 02&lt;/strong&gt;   ;function number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DH = 00&lt;/strong&gt;   ;row number for cursor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DL = 00&lt;/strong&gt;   ;column number for cursor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BH = 00&lt;/strong&gt;   ;page number&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;03---get-the-current-cursor-position&#34;&gt;03 - get the current cursor position&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AH = 03&lt;/strong&gt;   ;function number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BH = 00&lt;/strong&gt;   ;page number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DH = 00&lt;/strong&gt;   ;row number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DL = 00&lt;/strong&gt;   ;column number&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;0e---output-a-character-to-the-screen&#34;&gt;0E - output a character to the screen&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AH = 0E&lt;/strong&gt;   ;function number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AL = 00&lt;/strong&gt;   ;character we want to display&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BH = 00&lt;/strong&gt;   ;page number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BL = 00&lt;/strong&gt;   ;foreground color&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;int-21h---display--keyboard&#34;&gt;INT 21H - Display &amp;amp; Keyboard&lt;/h3&gt;
&lt;h4 id=&#34;09---outputing-a-string-of-data-to-the-monitor&#34;&gt;09 - outputing a string of data to the monitor&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AH = 09&lt;/strong&gt;   ;function number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DX = 00&lt;/strong&gt;   ;offset address for string array&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;rsquo;s important to have &lt;strong&gt;$&lt;/strong&gt; in the end of the array.&lt;/p&gt;
&lt;h4 id=&#34;02---outputing-a-single-character-to-the-monitor&#34;&gt;02 - outputing a single character to the monitor&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AH = 02&lt;/strong&gt;   ;function number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DL = 00&lt;/strong&gt;   ;ASCII code for character&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;01---inputing-a-single-character-with-an-echo&#34;&gt;01 - inputing a single character with an echo&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AH = 01&lt;/strong&gt;   ;function number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AL = 00&lt;/strong&gt;   ;it&amp;rsquo;s stores the data displayed and taken by keyboard after interrupt (ASCII).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;0a---inputing-a-string-of-data-from-the-keyboard&#34;&gt;0A - inputing a string of data from the keyboard&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AH = 0A&lt;/strong&gt;   ;function number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DX = 00&lt;/strong&gt;   ;offset address for string array we want to store&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When we press &lt;strong&gt;ENTER&lt;/strong&gt; it stops recording data, after:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DS:DX =&lt;/strong&gt; buffer size with bytes (character length + 2)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DS:DX+1 =&lt;/strong&gt; character length&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DS:DX+2 =&lt;/strong&gt; first character of array&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DS:DX+n =&lt;/strong&gt; last character of array&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To be able to record array we have to declare buffer storage.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BUFFER DB 10,?,10 DUP (FF)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;int-16h---keyboard&#34;&gt;INT 16H - Keyboard&lt;/h3&gt;
&lt;h4 id=&#34;01---controlling-to-detect-key-strokes&#34;&gt;01 - controlling to detect key strokes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AH = 01&lt;/strong&gt;   ;function number&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we type something &lt;strong&gt;ZF&lt;/strong&gt; becomes &lt;strong&gt;0&lt;/strong&gt;.&lt;/p&gt;
&lt;h4 id=&#34;00---reading-keyboard&#34;&gt;00 - reading keyboard&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AH = 00&lt;/strong&gt;   ;function number&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When we type something to keyboard &lt;strong&gt;AL&lt;/strong&gt; stores typed character with ASCII format.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;These interrupts are just examples, there are ton of interrupts we can use.&lt;/p&gt;
&lt;h2 id=&#34;example-code&#34;&gt;Example Code&lt;/h2&gt;
&lt;p&gt;I want to show you how to use interrupts with a simple example. In this example I want to type some string and display it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.MODEL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SMALL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.STACK&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.DATA&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MESSAGE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DB&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;your&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;:&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;;welcome message
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;USER_INPUT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DB&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DUP&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;)            &lt;span style=&#34;color:#75715e&#34;&gt;;user input we want to store
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;NEWLINE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DB&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;,&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;                 &lt;span style=&#34;color:#75715e&#34;&gt;;move to new line after typing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.CODE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AX&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DATA&lt;/span&gt;                         &lt;span style=&#34;color:#75715e&#34;&gt;;required stuff
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DS&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;AX&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;LEA&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SI&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;USER_INPUT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AH&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;LEA&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DX&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;MESSAGE&lt;/span&gt;                      &lt;span style=&#34;color:#75715e&#34;&gt;;display welcome message
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AH&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AH&lt;/span&gt;                          &lt;span style=&#34;color:#75715e&#34;&gt;;get pressed key
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DX&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;SI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AH&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;                          &lt;span style=&#34;color:#75715e&#34;&gt;;display new line
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;LEA&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DX&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;NEWLINE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AH&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;                          &lt;span style=&#34;color:#75715e&#34;&gt;;display typed string
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;LEA&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DX&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;USER_INPUT&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AH&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CH&lt;/span&gt;                          &lt;span style=&#34;color:#75715e&#34;&gt;;terminate program
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;END&lt;/span&gt;                                    &lt;span style=&#34;color:#75715e&#34;&gt;;exit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
</item>
    
    <item>
<title>Introduction to the Assembly Language</title>
<link>http://localhost:5500/blog/assembly-introduction/</link>
<pubDate>Fri, 13 Nov 2020 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:5500/blog/assembly-introduction/</guid>
<description>&lt;h2 id=&#34;what-is-assembly-language&#34;&gt;What is Assembly language?&lt;/h2&gt;
&lt;p&gt;Assembly Language is &lt;strong&gt;low-level&lt;/strong&gt; programming language which is used to program computers. It&amp;rsquo;s depends on the machine code instructions, so&lt;/p&gt;
&lt;p&gt;every assembly language is designed for exactly one specific computer architecture.&lt;/p&gt;
&lt;p&gt;Assembly code is converted to &lt;strong&gt;executable machine code&lt;/strong&gt; with an &lt;strong&gt;assembler&lt;/strong&gt;. Computers will execute these machine codes to run our programs.&lt;/p&gt;
&lt;h4 id=&#34;some-advantages-of-assembly-language&#34;&gt;Some advantages of assembly language:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Requires less memory and execution time&lt;/li&gt;
&lt;li&gt;Allows us to work with hardware specific jobs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;simple-example-to-print-hello-world-in-assembly&#34;&gt;Simple example to print &amp;ldquo;Hello World&amp;rdquo; in assembly&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.MODEL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SMALL&lt;/span&gt;                          &lt;span style=&#34;color:#75715e&#34;&gt;;select your model (your project estimated size)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.STACK&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;                             &lt;span style=&#34;color:#75715e&#34;&gt;;reserve 64 bytes of uninitialized storage
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.DATA&lt;/span&gt;                                 &lt;span style=&#34;color:#75715e&#34;&gt;;data segment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MESSAGE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DB&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Hello&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;World&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;;message variable with string we want to print out
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.CODE&lt;/span&gt;                                 &lt;span style=&#34;color:#75715e&#34;&gt;;code segment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AX&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DATA&lt;/span&gt;                       &lt;span style=&#34;color:#75715e&#34;&gt;;required code block for small model
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DS&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;AX&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AH&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;                         &lt;span style=&#34;color:#75715e&#34;&gt;;09H for interrupt to display string
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;LEA&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DX&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;MESSAGE&lt;/span&gt;                     &lt;span style=&#34;color:#75715e&#34;&gt;;display the message
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;                             &lt;span style=&#34;color:#75715e&#34;&gt;;interrupt 21H
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AX&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;C00H&lt;/span&gt;                       &lt;span style=&#34;color:#75715e&#34;&gt;;terminate with return code (same as 4CH)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;INT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;H&lt;/span&gt;                             &lt;span style=&#34;color:#75715e&#34;&gt;;interrupt 21H
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;END&lt;/span&gt;                                   &lt;span style=&#34;color:#75715e&#34;&gt;;exit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we have to setup some sort of code enviorement to run this code. I&amp;rsquo;d like to go with DOSBox. Visit &lt;a href=&#34;https://www.dosbox.com/download.php?main=1&#34;&gt;dosbox.com&lt;/a&gt; to download latest version. And then we need to install assembler, for this I prefer Turbo Assembler (TASM).&lt;/p&gt;
&lt;p&gt;For more detailed enviorement setup guide you can visit &lt;a href=&#34;https://mccshreyas.wordpress.com/2017/03/27/how-to-install-and-configure-tasm-on-windows-7810/&#34;&gt;this blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To run the program open your DOSBox and type &lt;code&gt;edit example.asm&lt;/code&gt;. With this command emulator will open it&amp;rsquo;s code editor. In here you can write your code. When you feel ready you can go top left and click to save and then click exit.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dosbox-screenshot-1.png&#34; alt=&#34;dosbox-screenshot-1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dosbox-screenshot-2.png&#34; alt=&#34;dosbox-screenshot-2&#34;&gt;&lt;/p&gt;
&lt;p&gt;After all we have to convert our code into machine code, in enviorement setup we installed TASM to do that.&lt;/p&gt;
&lt;p&gt;In terminal type &lt;code&gt;tasm example.asm&lt;/code&gt;. With this command your asm file will be converted into obj file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dosbox-screenshot-3.png&#34; alt=&#34;dosbox-screenshot-3&#34;&gt;&lt;/p&gt;
&lt;p&gt;After we can run &lt;code&gt;tlink example.obj&lt;/code&gt; to make it executable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dosbox-screenshot-4.png&#34; alt=&#34;dosbox-screenshot-4&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now if you run &lt;code&gt;dir&lt;/code&gt; command you should see your &lt;strong&gt;example.exe&lt;/strong&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dosbox-screenshot-5.png&#34; alt=&#34;dosbox-screenshot-5&#34;&gt;&lt;/p&gt;
&lt;p&gt;To run that just type &lt;code&gt;example&lt;/code&gt; and there we go, we have our &lt;em&gt;&amp;ldquo;Hello World&amp;rdquo;&lt;/em&gt; printed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;dosbox-screenshot-6.png&#34; alt=&#34;dosbox-screenshot-6&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Assembly_language&#34;&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tutorialspoint.com/assembly_programming/assembly_introduction.htm&#34;&gt;Tutorials Point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.c-jump.com/CIS77/ASM/Stack/lecture.html&#34;&gt;C-Jump&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/5364270/concept-of-mov-ax-cs-and-mov-ds-ax&#34;&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mccshreyas.wordpress.com/2017/03/27/how-to-install-and-configure-tasm-on-windows-7810/&#34;&gt;MCCshreyas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
</item>
    
  </channel>
</rss>